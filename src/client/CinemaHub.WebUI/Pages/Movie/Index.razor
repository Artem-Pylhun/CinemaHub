@page "/movie/get-all"
@inject NavigationManager Navigation
@inject IObjService<MovieDto, MovieCreateDto, MovieUpdateDto> MovieService
@inject IMapper mapper
<link href="~/css/bootstrap/bootstrap.min.css">
<div class="float-end" style="width:10px"></div>



<a href="/movie/add" class="btn btn-success float-end">Add Movie</a>
<div class="float-end" style="width:10px"></div>
<h2 class="mt-3 mb-3">Movies</h2>

@if (movies == null)
{
    <p><em>Loading...</em></p>
}
else if (!movies.Any())
{
    <p>No movies available.</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr class="text-center align-middle">
                <th>Title</th>
                <th>Release</th>
                <th>Min age</th>
                <th>Duration</th>
                <th>Poster</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var movie in movies)
            {
                <tr class="text-center align-middle">
                    <td><strong>@movie.Title</strong></td>
                    <td><strong>@movie.Release.ToString("dd.MM.yyyy")</strong></td>
                    <td><strong>@movie.MinAge</strong></td>
                    <td><strong>@movie.Duration</strong></td>
                    <td><img src="@movie.PosterUrl" style="max-height: 200px; max-width: 200px;" /></td>
                    <td class="text-center">
                        <div class="d-flex flex-column gap-2 align-content-center justify-content-around">
                            <a href="movie/update/@movie.Id" class="btn btn-warning w-100">Edit</a>
                            <a href="movie/details/@movie.Id" class="btn btn-info w-100">Details</a>
                            <button @onclick="() => Delete(movie.Id)" class="btn btn-danger w-100">Delete</button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<MovieDto> movies = new List<MovieDto>();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            MovieService.SetEndpoint("movie");

            movies = await MovieService.GetObjects();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching movies: {ex.Message}");
        }
    }
    async Task Delete(Guid id)
    {
        await MovieService.DeleteObject(id);
        movies = await MovieService.GetObjects();
    }
}