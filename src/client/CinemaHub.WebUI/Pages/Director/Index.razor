@page "/director/get-all"
@inject NavigationManager Navigation
@inject IObjService<DirectorDto, DirectorCreateDto, DirectorUpdateDto> DirectorService
@inject IMapper mapper
<link href="~/css/bootstrap/bootstrap.min.css">
<div class="float-end" style="width:10px"></div>


<div class="d-flex flex-row justify-content-around align-items-center">
    <h2 class="mt-3 mb-3">Directors</h2>
    <div class="d-flex flex-row gap-3 align-items-center">
        <a href="/director/add" class="btn btn-success float-end">Add Director</a>
        <button @onclick="() => ViewToggle()" class="btn btn-info">@(_cardView ? "Table" : "Card") View</button>
    </div>
</div>
@if (directors == null)
{
    <p><em>Loading...</em></p>
}
else if (!directors.Any())
{
    <p>No directors available.</p>
}
else
{
    @if (!_cardView)
    {
        <table class="table table-bordered">
            <thead>
                <tr class="text-center align-middle">
                    <th>Full Name</th>
                    <th>Gender</th>
                    <th>Date of birth</th>
                    <th>Nationality</th>
                    <th>Image</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var director in directors)
                {
                    <tr class="text-center align-middle">
                        <td><strong>@director.FullName</strong></td>
                        <td><strong>@director.Gender</strong></td>
                        <td><strong>@director.DateOfBirth.ToString("dd.MM.yyyy")</strong></td>
                        <td><strong>@director.Nationality</strong></td>
                        <td><img src="@director.ImagePath" style="max-width: 300px; max-height: 300px;" /></td>
                        <td class="text-center d-flex justify-content-evenly">
                            <a href="director/@director.Id" class="btn btn-warning w-25">Edit</a>
                            <button @onclick="() => Delete(director.Id)" class="btn btn-danger w-25">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="row d-flex flex-row gap-3 justify-content-around">
            @foreach (var director in directors)
            {
                <div class="card col-3" style="width: 18rem;">
                    <img class="card-img-top" src="@director.ImagePath" alt="Card image cap">
                    <div class="card-body">
                        <h5 class="card-title">@director.FullName</h5>
                    </div>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item">Gender: @director.Gender</li>
                        <li class="list-group-item">Date of birth: @director.DateOfBirth.ToString("dd.MM.yyyy")</li>
                        <li class="list-group-item">Nationality: @director.Nationality</li>
                    </ul>
                    <div class="card-body d-flex flex-row g-1 justify-content-around">
                        <a href="actor/@director.Id" class="btn btn-warning" style="width: 40%;">Edit</a>
                        <button @onclick="() => Delete(director.Id)" class="btn btn-danger" style="width: 40%;">Delete</button>
                    </div>
                </div>
            }
        </div>
    }
}

@code {
    private bool _cardView = false;
    private List<DirectorDto> directors = new List<DirectorDto>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            DirectorService.SetEndpoint("director");
            directors = await DirectorService.GetObjects();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching directors: {ex.Message}");
        }
    }
    async Task Delete(Guid id)
    {
        await DirectorService.DeleteObject(id);
        directors = await DirectorService.GetObjects();
    }

    async Task ViewToggle()
    {
        _cardView = _cardView ? false : true;
    }
}