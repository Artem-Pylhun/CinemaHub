@page "/cinema/get-all"
@inject NavigationManager Navigation
@inject IObjService<CinemaDto, CinemaCreateDto, CinemaUpdateDto> CinemaService
@inject IMapper mapper
<link href="~/css/bootstrap/bootstrap.min.css">
<div class="float-end" style="width:10px"></div>




<a href="/cinema/add" class="btn btn-success float-end">Add Cinema</a>
<div class="float-end" style="width:10px"></div>
<h2 class="mt-3 mb-3">Cinemas</h2>

@if (cinemas == null)
{
    <p><em>Loading...</em></p>
}
else if (!cinemas.Any())
{
    <p>No cinemas available.</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr class="text-center align-middle">
                <th>Title</th>
                <th>Location</th>
                <th>Phone</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cinema in cinemas)
            {
                <tr class="text-center align-middle">
                    <td><strong>@cinema.Title</strong></td>
                    <td><strong>@cinema.Location</strong></td>
                    <td><strong>@cinema.PhoneNumber</strong></td>
                    <td class="d-flex flex-column gap-2 align-content-center justify-content-around">
                        <a href="cinema/update/@cinema.Id" class="btn btn-warning w-100">Edit</a>
                        <button @onclick="() => Delete(cinema.Id)" class="btn btn-danger w-100">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<CinemaDto> cinemas = new List<CinemaDto>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            CinemaService.SetEndpoint("cinema");
            cinemas = await CinemaService.GetObjects();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching cinema: {ex.Message}");
        }
    }
    async Task Delete(Guid id)
    {
        await CinemaService.DeleteObject(id);
        cinemas = await CinemaService.GetObjects();
    }
}